# Generated by federate, DO NOT EDIT.
.PHONY: build-rpm build-docker package run clean help inspect
.SILENT:

help:
	awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make ENV=test \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-30s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } /^##[^@]/ { printf "%s\n", substr($$0, 4) }' $(MAKEFILE_LIST)

##@ Build

clean:
	echo "‚òïÔ∏è mvn clean ..."
	mvn clean -q

package:clean ## Compile and package {{.AppName}}.
	echo "‚òïÔ∏è mvn package ..."
	mvn package -q -U -Dmaven.test.skip=true -T8

inspect: ## Inspect indirect conflict risk before runtime.
	if [ ! -d "target/{{.AppName}}-1.0.0-SNAPSHOT-package" ]; then \
		echo "target/{{.AppName}}-1.0.0-SNAPSHOT-package not found. Running 'make package'..."; \
		$(MAKE) package; \
	fi
	java -classpath target/{{.AppName}}-1.0.0-SNAPSHOT-package/conf:target/{{.AppName}}-1.0.0-SNAPSHOT-package/lib/* {{.ClassName}} --detect-indirect-risk

run-local: ## Bootstrap {{.AppName}} foreground on your host.
	if [ ! -d "target/{{.AppName}}-1.0.0-SNAPSHOT-package" ]; then \
		echo "target/{{.AppName}}-1.0.0-SNAPSHOT-package not found. Running 'make package'..."; \
		$(MAKE) package; \
	fi
	echo "‚òïÔ∏è Starting {{.AppName}} ..."
	env {{.Env}} java -DappName={{.AppName}} -Xss1m -server -classpath target/{{.AppName}}-1.0.0-SNAPSHOT-package/conf:target/{{.AppName}}-1.0.0-SNAPSHOT-package/lib/* {{.ClassName}}

##@ Analysis

dependency-tree: ## Execute mvn dependency:tree.
	mvn dependency:tree -Dmaven.test.skip=true -DoutputFile=tree.txt -q
	echo "üç∫ check out tree.txt"

##@ Deployment

build-rpm: ## Build {{.AppName}} into RPM to upload to yum repo.
	federate image build-rpm --app-name {{.AppName}} --app-source-path {{.AppSrc}} --jvm-size {{.JvmSize}} --main-module {{.ClassName}} --tomcat-port {{.TomcatPort}}

build-rpm-debug:
	federate image build-rpm --debug --app-name {{.AppName}}

build-docker: ## Build {{.AppName}} into Docker image to push to jdcloud image registry.
	federate image build-docker --image-repo {{.AppName}} --app-source-path {{.AppSrc}}
