version: 1.0
kind: Fusion

#=========
# 联邦应用
#=========
federated:
  name: fusion-stock-inventory
  springProfile: test
  groupId: com.jdwl.wms
  dependency:
    exclude:
      - org.slf4j:slf4j-log4j12 # 排除 SLF4J bindings 冲突
  rpm:
    - env: on-premise
      tomcatPort: 8082
      jvmSize: large # medium, small
      JAVA_OPTS: "-Xms2048m -Xmx2048m -XX:MaxPermSize=256m"
  springBootApplication:
    class: com.jdwl.wms.fusion.WmsStockInventory
    exclude: # @SpringBootApplication#exclude
       - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
    import:  # @Import
      - com.jdwl.wms.fusion.FederatedDataSource
      - com.jdwl.wms.fusion.FederatedWebInterceptor
      - com.jdwl.wms.cache.WmsCacheConfiguration
      - com.jdwl.wms.common.web.XssAutoConfiguration
      - com.jdwl.wms.common.workload.web.TomcatConfig
      - com.jd.security.configsec.spring.config.JDSecurityPropertyCleanService
    componentScan: # @ComponentScan
      basePackages: # @ComponentScan#basePackages
        - com.jdwl.wms
        - io.github.dddplus
        - com.zhongyouex.wms
      excludedTypes: # @ComponentScan#excludeFilters
        - com.jdwl.wms.stock.ApiProviderApplication
        - com.jdwl.wms.inventory.WebApplication
        - com.jdwl.wms.stock.datasource.DataSourceConfig
        - com.jdwl.wms.inventory.datasource.DataSourceConfig
        - com.jdwl.wms.stock.common.WebMvcConfig
        - com.jdwl.wms.inventory.intercept.WebMvcConfig
        - com.jdwl.wms.stock.common.config.SwaggerConfig
  reconcile: # 冲突调和
    manual: # 无法自动合并，用户手工合并
      logConfigXml: logback-test.xml
      mybatisConfigXml: mybatis-config.xml
    excludeBeans: # 不加载这些类对应的bean
    rpc:
      provider: # 抑制暴露哪些服务
      consumer: # 远程RPC调用拉回到JVM内
        ignoreRules:
          - package: com.jdwl.wms.stock.api
            except:
              - com.jdwl.wms.stock.api.external.OutboundOrderQueryService
              - com.jdwl.wms.stock.api.external.InteractQueryService
          - package: com.jdwl.wms.inventory.api
    resources: # 资源文件处理
      copy: # 合并到目标系统 src/main/resources/，因为代码里写死路径；并自动检测重名文件冲突
        - "*.html"
        - "*.json"
      property: # 属性 key 的冲突：yml/properties
        dryrun: ${RECONCILE_PROPERTY_DRYRUN:false}
        override: # 对属性值进行人工设定
          app.demo.feature.newFeature.enabled: true
        raw: # 这些 key 的值不做字符串处理
          # @Value("#{${strategyCondition.recommendBusinessTypeMap}}")
          # private Map<String, String> recommendBusinessTypeMap;
          - strategyCondition.recommendBusinessTypeMap
      singletonBeans: # 这些 bean 只加载1次：资源复用
        - com.jd.jim.cli.ReloadableJimClientFactoryBean
        - com.jdwl.wms.common.redis.jimdb.JimdbClient
        - com.jdwl.wms.common.lock.JimdbLocker
        - com.jdwl.wms.common.workload.RateLimiterRedis
        - org.springframework.kafka.core.DefaultKafkaProducerFactory
        - com.jdwl.wms.common.kafka.consumer.DurationMessageExceptionStrategy
        - com.jd.coo.sa.mybatis.plugins.id.SequenceGenAdaptor

#===============================
# fusion-starter runtime support
#===============================
fusion-starter:
  dependencies: # fusion-starter 使用了 @Slf4j 和 spring-boot，如果现有工程没有使用则需要依赖
    - org.springframework.boot:spring-boot:2.2.7.RELEASE:provided
    - org.slf4j:slf4j-api:1.7.30
  resourceLoader:
  beanNameGenerator:
    excludedBeanPatterns:
      - com.foo.bar.Clazz
      - com.foo.baz
  exitOnStartupFailure: true # fail fast on ApplicationFailedEvent，避免假死
  inspect: # 运行前自检
    addon: # 客户扩展开发的插件 FQCN，实现接口：RiskDetector
      #- com.foo.Bar

#===========
# 微服务构成
#===========
components:
  - name: wms-stock
    repo: git@coding.jd.com:wms-ng/wms-stock.git
    environments:
      - name: test
        branch: test
        mavenProfile: test
    springProfile: test
    modules: # 启动包
      - com.jdwl.wms:wms-stock-api-provider:1.0.0-SNAPSHOT
    transform:
      beans:
        masterDataSource: stockMasterDataSource
        slaveDataSource: stockSlaveDataSource
    resources: # 资源文件处理
      baseDir:
        - wms-stock-api-provider/src/main/resources
        - wms-stock-api/src/main/resources
      propertySource:
        - important.properties
      ignore: # 它们不会拷贝到目标系统的的 src/main/resources/federated/
        - "dubbo*xml"
        - "*kafka*"
      import: # 目标系统 spring.xml 会 import 这些资源
        - sequence-bean.xml
        - jsf-provider.xml
        - application-jmq-producer.xml
        - application-jmq-consumer.xml
      jsfConsumerXml:
        - jsf-consumer.xml

  - name: wms-inventory
    repo: git@coding.jd.com:wms-ng/wms-inventory.git
    environments:
      - name: test
        branch: test
        mavenProfile: test
    springProfile: test
    modules: # 启动包
      - com.jdwl.wms:wms-inventory-web:1.0.0-SNAPSHOT
    transform:
      beans:
        masterDataSource: inventoryMasterDataSource
        slaveDataSource: inventorySlaveDataSource
    resources: # 资源文件处理
      baseDir:
        - wms-inventory-web/src/main/resources
      propertySource:
        - important.properties
        - clover-server.properties
      ignore: # 它们不会拷贝到目标系统的的 src/main/resources/federated/
        - "dubbo*xml"
        - "*kafka*"
      import: # 目标系统 spring.xml 会 import 这些资源
        - common/*.xml
        - config/*.xml
        - jmq/*.xml
        - jsf/jsf-provider*.xml
        - clover/*.xml
        - ducc/*.xml
        - jimkv/*.xml
      jsfConsumerXml:
        - jsf/jsf-consumer*.xml
