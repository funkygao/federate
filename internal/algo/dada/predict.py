import pandas as pd
import xgboost as xgb

# 加载训练好的模型
model = xgb.Booster()
model.load_model('xgb_model.model')

# 实时数据（假设从 API 或数据库中获取）
real_time_data = {
    '骑手到取货距离': [1.5, 0.8, 2.0],
    '骑手速度': [20, 15, 25],
    '骑手负载': [2, 1, 0],
    '骑手准时率': [95, 90, 98],
    '订单距离': [2.0, 1.5, 2.5],
    '订单金额': [50, 80, 30],
    '时间窗': [30, 45, 20],
    '天气': [0, 0, 1],
    '路况': [0, 1, 0],
    '时间段': [12, 12, 12],
    '骑手到取货时间': [4.5, 3.2, 4.8],
    '负载与金额交互': [100, 80, 0],
    '年龄': [25, 30, 28],
    '性别': [1, 0, 1],  # 男=1, 女=0
    '骑手等级': [2, 1, 3],  # 青铜=0, 白银=1, 黄金=2, 钻石=3
    '历史完成订单数': [500, 300, 800],
    '历史平均评分': [4.8, 4.5, 4.9],
    '历史投诉次数': [2, 5, 1],
    '是否全职': [1, 0, 1]  # 是=1, 否=0
}

# 转换为 DataFrame
real_time_df = pd.DataFrame(real_time_data)

# 确保列的顺序与训练时一致
feature_names = [
    '骑手到取货距离', '骑手速度', '骑手负载', '骑手准时率', '订单距离', '订单金额', '时间窗', '天气', '路况', '时间段',
    '骑手到取货时间', '负载与金额交互', '年龄', '性别', '骑手等级', '历史完成订单数', '历史平均评分', '历史投诉次数', '是否全职'
]
real_time_df = real_time_df[feature_names]

# 预测配送时间
predictions = model.predict(xgb.DMatrix(real_time_df))
print("预测配送时间:", predictions)

